pipeline {
  agent any

  environment {
    BACKEND_IMAGE = 'your-podmanhub-username/backend'
    FRONTEND_IMAGE = 'your-podmanhub-username/frontend'
    SERVER_USER = 'ec2-user'
    SERVER_IP = '172.31.85.88'
  }

  stages {
    stage('Checkout from GitHub') {
      steps {
        // Клонирует репозиторий, где лежит Jenkinsfile
        checkout scm
        // Если нужно взять ещё что-то из другого репозитория:
        // git url: 'https://github.com/username/other-repo.git', branch: 'main'
      }
    }
    stage('Clean Podman Temp') {
      steps {
        sh '''
          rm -rf /tmp/storage-run-991/containers
          rm -rf /tmp/storage-run-991/libpod/tmp
        '''
      }
    }
    stage('Backend: Build & Save') {
      steps {
        dir('backend') {
          sh '''
          export PATH=$PATH:$HOME/.local/bin
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          '''
          sh "podman --cgroup-manager=cgroupfs build -t ${BACKEND_IMAGE} ."
        }
        sh 'rm -f backend.tar'
        sh "podman save ${BACKEND_IMAGE} -o backend.tar"
      }
    }
    stage('Frontend: Build & Save') {
      steps {
        dir('frontend') {
          sh '''
          export PATH=$PATH:$HOME/.local/bin
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          '''
          sh "podman --cgroup-manager=cgroupfs build -t ${FRONTEND_IMAGE} ."
        }
        sh 'rm -f frontend.tar'
        sh "podman save ${FRONTEND_IMAGE} -o frontend.tar"
      }
    }
    stage('Copy Images to Target1') {
      steps {
        sh "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} 'mkdir -p ~/ci-temp'"
        sh "scp -o StrictHostKeyChecking=no backend.tar frontend.tar ${SERVER_USER}@${SERVER_IP}:/tmp/"
      }
    }
    stage('Deploy with Ansible') {
      steps {
        sh "export PATH=$PATH:/usr/local/bin:/usr/bin:/var/lib/jenkins/.local/bin"
        sh "ansible-playbook -u ec2-user ansible/roles/deploy.yml -i ansible/inventory"
      }
    }
  }
    post {
        always {
            // Clean the workspace after the build
            cleanWs()
        }
    }
}
